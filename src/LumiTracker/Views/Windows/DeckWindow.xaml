<Window 
    x:Class="LumiTracker.Views.Windows.DeckWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:LumiTracker.Views.Windows"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:vm="clr-namespace:LumiTracker.ViewModels.Windows"
    xmlns:helpers="clr-namespace:LumiTracker.Helpers"
    xmlns:svs="clr-namespace:LumiTracker.Services"
    xmlns:sysWindows="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:ctrls="clr-namespace:LumiTracker.Controls"
    mc:Ignorable="d"
    Title="{Binding Path=ViewModel.DeckWindowTitle.Text}"
    ShowInTaskbar="False"
    WindowStyle="None"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    Height="600" Width="400">

    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <Border Background="Transparent" CornerRadius="7">
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
            </Border>
        </ControlTemplate>
    </Window.Template>

    <Window.Resources>
        <helpers:SizeWithRatioConverter x:Key="SizeWithRatioConverter" />
        <helpers:SizeWithRatioVariableConverter x:Key="SizeWithRatioVariableConverter" />
        <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <helpers:BooleanNotToVisibilityConverter x:Key="BooleanNotToVisibilityConverter" />
        <helpers:MultiBooleanAndToVisibilityConverter x:Key="MultiBooleanAndToVisibilityConverter" />
        <helpers:TrueFalseCondSwitchConverter x:Key="TrueFalseCondSwitchConverter" />

        <SolidColorBrush x:Key="TabHeaderBackground" Color="#6aaaaaaa" />
        <SolidColorBrush x:Key="TogglePanelBackgroundChecked" Color="#ff1cdde9" />
        <SolidColorBrush x:Key="TogglePanelBackgroundCheckedPointerOver" Color="#ff3df3ff" />
        <SolidColorBrush x:Key="TogglePanelBackgroundCheckedPressed" Color="#ff5cf5ff" />

        <!-- Modify tab header's radius border -->
        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="{x:Type TabItem}">
                <Grid x:Name="Root">
                    <Border
                        x:Name="Border"
                        Margin="0"
                        Padding="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0, 0, 0, 0"
                        CornerRadius="8,8,0,0">
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                    </Border>

                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="SelectionStates">
                            <VisualState x:Name="Unselected" />
                            <VisualState x:Name="Selected" />

                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="MouseOver" />
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Opacity)"
                                        From="0.0"
                                        To="0.5"
                                        Duration="0:0:.16" />
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Panel.ZIndex" Value="100" />
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabViewSelectedItemBorderBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource TabViewItemForegroundSelected}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid
        Width="{Binding Width}"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Bottom"
        x:Name="MainContent" 
        >
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.Height>
            <MultiBinding Converter="{StaticResource SizeWithRatioVariableConverter}">
                <Binding Path="Height" />
                <Binding Path="ViewModel.MainContentHeightRatio" />
            </MultiBinding>
        </Grid.Height>

        <!-- Main Content -->        
        <Grid 
            Grid.Row="0"
            x:Name="DeckWindowPopup" 
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            >

            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource MultiBooleanAndToVisibilityConverter}"
                              ConverterParameter="Collapsed"
                              >
                    <Binding Path="IsChecked" ElementName="Expander" />
                    <Binding Path="ViewModel.IsShowing" />
                </MultiBinding>
            </Grid.Visibility>

            <TabControl 
                Grid.Row="0"
                Margin="0,8,0,0"
                Loaded="OnTabControlLoaded" 
                x:Name="DeckWindowTabControl" 
                >

                <!-- My Deck -->
                <TabItem 
                    Height="{Binding Height, 
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.042
                        }"
                    Width="{Binding Path=Width, Converter={StaticResource SizeWithRatioConverter}, ConverterParameter=0.3333}"
                    Background="{StaticResource TabHeaderBackground}"
                    x:Name="MyDeckTab"
                    >
                    <!--Header-->
                    <TabItem.Header>
                        <ctrls:DeckWindowTabHeader
                            Icon="PlayingCards20"
                            IconMargin="2,0,4,0"
                            Text="{svs:Localization MyDeck}"
                            FontSize="{Binding Height, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                Converter={StaticResource SizeWithRatioConverter}, 
                                ConverterParameter=0.016
                                }"
                            />
                    </TabItem.Header>
                    <!--Content-->
                    <ctrls:DeckWindowCardListTab
                        Margin="0,-1,0,0"
                        ViewModel="{Binding Path=ViewModel}"
                        CardList="{Binding Path=ViewModel.MyDeck}"
                        WindowHeight="{Binding Height}"
                        WindowWidth="{Binding Width}"
                        />
                </TabItem>

                <!-- My Played -->
                <TabItem 
                    Height="{Binding Height, 
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.042
                        }"
                    Width="{Binding Path=Width, Converter={StaticResource SizeWithRatioConverter}, ConverterParameter=0.3333}"
                    Background="{StaticResource TabHeaderBackground}"
                    x:Name="MyPlayedTab"
                    >
                    <!--Header-->
                    <TabItem.Header>
                        <ctrls:DeckWindowTabHeader
                            Icon="Person24"
                            IconMargin="2,0,4,0"
                            Text="{svs:Localization MyPlayedCards}"
                            FontSize="{Binding Height, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                Converter={StaticResource SizeWithRatioConverter}, 
                                ConverterParameter=0.016
                                }"
                            />
                    </TabItem.Header>
                    <!--Content-->
                    <ctrls:DeckWindowCardListTab
                        Margin="0,-1,0,0"
                        ViewModel="{Binding Path=ViewModel}"
                        CardList="{Binding Path=ViewModel.MyActionCardsPlayed}"
                        WindowHeight="{Binding Height}"
                        WindowWidth="{Binding Width}"
                        />
                </TabItem>

                <!-- Op Played -->
                <TabItem 
                    Height="{Binding Height, 
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.042
                        }"
                    Width="{Binding Path=Width, Converter={StaticResource SizeWithRatioConverter}, ConverterParameter=0.3333}"
                    Background="{StaticResource TabHeaderBackground}"
                    x:Name="OpPlayedTab"
                    >
                    <!--Header-->
                    <TabItem.Header>
                        <ctrls:DeckWindowTabHeader
                            Icon="TargetArrow24"
                            IconMargin="2,0,4,0"
                            Text="{svs:Localization OpPlayedCards}"
                            FontSize="{Binding Height, 
                                RelativeSource={RelativeSource AncestorType={x:Type Window}},
                                Converter={StaticResource SizeWithRatioConverter}, 
                                ConverterParameter=0.016
                                }"
                            />
                    </TabItem.Header>
                    <!--Content-->
                    <ctrls:DeckWindowCardListTab
                        Margin="0,-1,0,0"
                        ViewModel="{Binding Path=ViewModel}"
                        CardList="{Binding Path=ViewModel.OpActionCardsPlayed}"
                        WindowHeight="{Binding Height}"
                        WindowWidth="{Binding Width}"
                    />
                </TabItem>

            </TabControl>
        </Grid>

        <!-- Toggle -->
        <Border
            Grid.Row="1"
            x:Name="TogglePanel"
            Height="{Binding Path=Height, Converter={StaticResource SizeWithRatioConverter}, ConverterParameter=0.04}"
            VerticalAlignment="Stretch"
            IsHitTestVisible="True"
            Background="{StaticResource TogglePanelBackgroundChecked}"
            CornerRadius="5"
            MouseEnter="OnMouseEnter"
            MouseLeave="OnMouseLeave"
            PreviewMouseDown="OnPreviewMouseDown"
            PreviewMouseUp="OnPreviewMouseUp"
            >
        <Border.HorizontalAlignment>
            <MultiBinding Converter="{StaticResource TrueFalseCondSwitchConverter}">
                <Binding>
                    <Binding.Source>
                        <sysWindows:HorizontalAlignment>Stretch</sysWindows:HorizontalAlignment>
                    </Binding.Source>
                </Binding>
                <Binding>
                    <Binding.Source>
                        <sysWindows:HorizontalAlignment>Left</sysWindows:HorizontalAlignment>
                    </Binding.Source>
                </Binding>
                <Binding Path="IsChecked" ElementName="Expander" />
            </MultiBinding>
        </Border.HorizontalAlignment>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <ToggleButton 
                x:Name="Expander"
                Grid.Column="0"
                IsChecked="True"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                FontWeight="Bold"
                Foreground="Black"
                Margin="4,0,0,0"
                FontSize="{Binding Height, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.016
                    }"
                Style="{StaticResource CustomExpandCollapseToggleButtonStyle}"
                RenderTransformOrigin="0.5, 0.5">
                <ToggleButton.RenderTransform>
                    <ScaleTransform ScaleY="-1" />
                </ToggleButton.RenderTransform>
            </ToggleButton>

            <!-- Expanded -->
            <TextBlock 
                Grid.Column="0"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontWeight="Bold"
                Foreground="Black"
                Text="{svs:Localization AppName}" 
                FontSize="{Binding Height, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.016
                    }"
                Visibility="{Binding IsChecked,
                    ElementName=Expander,
                    Converter={StaticResource BooleanToVisibilityConverter},
                    ConverterParameter=Collapsed,
                    Mode=OneWay
                    }"
                />

            <!-- Collapsed -->
            <ui:SymbolIcon 
                Grid.Column="1"
                Margin="2,3,6,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Foreground="Black"
                Visibility="{Binding IsChecked,
                    ElementName=Expander,
                    Converter={StaticResource BooleanNotToVisibilityConverter},
                    ConverterParameter=Collapsed,
                    Mode=OneWay
                    }"
                FontSize="{Binding Height, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.025
                    }"
                Symbol="PlayingCards20" />

        </Grid>
        </Border>

    </Grid>
</Window>
