<UserControl x:Class="LumiTracker.Controls.DeckWindowCardListTab"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:local="clr-namespace:LumiTracker.Views.Windows"
            xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
            xmlns:models="clr-namespace:LumiTracker.Models"
            xmlns:helpers="clr-namespace:LumiTracker.Helpers"
            xmlns:svs="clr-namespace:LumiTracker.Services"
            xmlns:ctrls="clr-namespace:LumiTracker.Controls"
            xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            mc:Ignorable="d" 
            d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <helpers:MultiBooleanAndConverter x:Key="MultiBooleanAndConverter" />
        <helpers:SizeWithRatioConverter x:Key="SizeWithRatioConverter" />
        <helpers:SizeWithRatioVariableConverter x:Key="SizeWithRatioVariableConverter" />
        <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <helpers:BooleanNotToVisibilityConverter x:Key="BooleanNotToVisibilityConverter" />
        <helpers:MultiBooleanAndToVisibilityConverter x:Key="MultiBooleanAndToVisibilityConverter" />
        <helpers:GetActiveDeckNameConverter x:Key="GetActiveDeckNameConverter" />
        <helpers:HideNonPositiveIntValueConverter x:Key="HideNonPositiveIntValueConverter" />
        <helpers:HidePositiveIntValueConverter x:Key="HidePositiveIntValueConverter" />
        <helpers:ExpandableCardListMaxHeightConverter x:Key="ExpandableCardListMaxHeightConverter" />


        <SolidColorBrush 
            x:Key="MainContentBackground"
            Color="#ff282c34" />

        <DataTemplate x:Key="ActionCardViewTemplate" DataType="{x:Type models:ActionCardView}">
            <ctrls:ActionCardViewListItem
                Value="{Binding Value, Mode=OneWay}"
                ItemWidth="{Binding WindowWidth, 
                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}}
                        }"
                ItemHeight="{Binding WindowHeight, 
                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}},
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.034
                        }"
                CostFontSize="{Binding WindowHeight, 
                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}},
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.016
                        }"
                NameFontSize="{Binding WindowHeight, 
                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}},
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.016
                        }"
                CountFontSize="{Binding WindowHeight, 
                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}},
                        Converter={StaticResource SizeWithRatioConverter}, 
                        ConverterParameter=0.018
                        }"
                HideCount="False"
                />
        </DataTemplate>

        <Style TargetType="ui:ListViewItem" BasedOn="{StaticResource {x:Type ui:ListViewItem}}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Padding" Value="2,4,4,3"/>
        </Style>

    </UserControl.Resources>

    <Grid 
        DataContext="{Binding RelativeSource={RelativeSource AncestorType=ctrls:DeckWindowCardListTab}}"
        Background="{StaticResource MainContentBackground}"
        >
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ItemsControl 
            Grid.Row="0" 
            Visibility="{Binding ViewModel.GameStarted,
                Converter={StaticResource BooleanToVisibilityConverter},
                ConverterParameter=Hidden
                }"
            ItemsSource="{Binding CardLists}"
            >
            <ItemsControl.ItemTemplate>
            <DataTemplate>
                <StackPanel>
                    <ctrls:DeckWindowExpandableHeader
                        x:Name="ExpandableHeader"
                        Header="{Binding Name.Text}"
                        Count="{Binding Count}"
                        IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                        IsExpandedChanged="OnIsExpandedChanged"
                        HeaderFontSize="{Binding WindowHeight, 
                            RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}},
                            Converter={StaticResource SizeWithRatioConverter}, 
                            ConverterParameter=0.018}"
                        />
                
                    <ui:ListView
                        ScrollViewer.VerticalScrollBarVisibility="{Binding ScrollBarVisibility}"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        MaxWidth="{Binding WindowWidth, 
                            RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}}
                            }"
                        ItemsSource="{Binding View}"
                        ItemTemplate="{StaticResource ActionCardViewTemplate}"
                        SelectionChanged="DisableListViewSelection"
                        Visibility="{Binding IsExpanded, 
                            Mode=OneWay,
                            Converter={StaticResource BooleanToVisibilityConverter},
                            ConverterParameter=Collapsed}"
                        >
                        <ui:ListView.MaxHeight>
                            <MultiBinding Converter="{StaticResource ExpandableCardListMaxHeightConverter}">
                                <Binding 
                                    Path="." 
                                    RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                <Binding 
                                    Path="ActualHeight" 
                                    ElementName="ExpandableHeader" />
                                <Binding 
                                    Path="NumberToTouch"   
                                    RelativeSource="{RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}}" />
                                <Binding 
                                    Path="ActualHeight"
                                    RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                            </MultiBinding>
                        </ui:ListView.MaxHeight>
                        
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="MouseEnter">
                                <b:InvokeCommandAction 
                                    Command="{Binding MouseEnterCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}}
                                        }"
                                    CommandParameter="{Binding .}"
                                />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="MouseLeave">
                                <b:InvokeCommandAction 
                                    Command="{Binding MouseLeaveCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type ctrls:DeckWindowCardListTab}}
                                        }"
                                    CommandParameter="{Binding .}"
                                />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ui:ListView>
                </StackPanel>
            </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- Game Not Started -->
        <TextBlock
            Grid.Row="1"
            Margin="0, 5, 0, 5"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            Visibility="{Binding ViewModel.GameStarted,
                    Converter={StaticResource BooleanNotToVisibilityConverter},
                    ConverterParameter=Hidden
                    }"
            FontSize="{Binding WindowHeight, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.015
                    }"
            >
            <Run 
                Foreground="DarkGray"
                Text="{svs:Localization GameNotStarted}"
            />
        </TextBlock>

        <Grid 
            Grid.Row="1"
            Visibility="{Binding ViewModel.GameStarted,
                Converter={StaticResource BooleanToVisibilityConverter},
                ConverterParameter=Hidden
                }"
            >

        <!-- Round Text -->
        <TextBlock
            Margin="0, 5, 0, 5"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            Visibility="{Binding ViewModel.Round,
                    Converter={StaticResource HideNonPositiveIntValueConverter},
                    ConverterParameter=Hidden
                    }"
            FontSize="{Binding WindowHeight, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.015
                    }"
            >
            <Run 
                Foreground="White"
                Text="{svs:Localization Round}"
                />
            <Run 
                Foreground="#f9ca24" 
                FontWeight="Bold" 
                Text="{Binding ViewModel.Round}"
                />
        </TextBlock>
        
        <!-- Deck Name -->
        <TextBlock
            Margin="0, 5, 0, 5"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            TextWrapping="NoWrap"
            TextTrimming="CharacterEllipsis"
            Visibility="{Binding ViewModel.Round,
                    Converter={StaticResource HidePositiveIntValueConverter},
                    ConverterParameter=Hidden
                    }"
            FontSize="{Binding WindowHeight, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.015
                    }"
            MaxWidth="{Binding WindowWidth, 
                    Converter={StaticResource SizeWithRatioConverter}, 
                    ConverterParameter=0.9
                    }"
            >
            <Run 
                Foreground="White"
                FontWeight="Light"
                Text="{svs:Localization SetAsActiveSuccess_Message}"
            />
            <Run 
                Foreground="#f9ca24"
                FontWeight="Bold"
            >
                <Run.Text>
                    <MultiBinding Converter="{StaticResource GetActiveDeckNameConverter}" >
                        <Binding Path="ViewModel.DeckViewModel.DeckItems" />
                        <Binding Path="ViewModel.DeckViewModel.ActiveDeckIndex" />
                        <Binding Path="ViewModel.DeckViewModel.SelectedDeckItem.Stats.SelectedBuildVersion.Edit.Name" />
                    </MultiBinding>
                </Run.Text>
            </Run>
        </TextBlock>

        </Grid>

    </Grid>
</UserControl>
